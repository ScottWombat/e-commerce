"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdatextra_app"]("client",{

/***/ "./src/app/store/cart/cartReducer.tsx":
/*!********************************************!*\
  !*** ./src/app/store/cart/cartReducer.tsx ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addItem: () => (/* binding */ addItem),\n/* harmony export */   cartSlice: () => (/* binding */ cartSlice),\n/* harmony export */   clearCart: () => (/* binding */ clearCart),\n/* harmony export */   decreaseQty: () => (/* binding */ decreaseQty),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   getAmountInCart: () => (/* binding */ getAmountInCart),\n/* harmony export */   getCurrentCart: () => (/* binding */ getCurrentCart),\n/* harmony export */   getTotalPrice: () => (/* binding */ getTotalPrice),\n/* harmony export */   increaseQty: () => (/* binding */ increaseQty),\n/* harmony export */   removeItem: () => (/* binding */ removeItem),\n/* harmony export */   selectAllItems: () => (/* binding */ selectAllItems),\n/* harmony export */   selectItemById: () => (/* binding */ selectItemById)\n/* harmony export */ });\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @reduxjs/toolkit */ \"./node_modules/@reduxjs/toolkit/dist/redux-toolkit.modern.mjs\");\n/* harmony import */ var reselect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! reselect */ \"./node_modules/reselect/dist/reselect.mjs\");\n/* harmony import */ var _cart_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cart-util */ \"./src/app/store/cart/cart-util.tsx\");\n\n\n\nvar initialState = {\n  //items: [{ 'id': 1, 'price': 200, 'key': 1 }, { 'id': 2, 'price': 300, 'key': 2 }],\n  items: [],\n  totalPrice: 0,\n  inCart: 0\n};\nvar cartSlice = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__.createSlice)({\n  name: 'cart',\n  initialState: initialState,\n  reducers: {\n    addItem: function addItem(state, action) {\n      console.log('addddd item');\n      state.items = (0,_cart_util__WEBPACK_IMPORTED_MODULE_0__.addItemToCart)(state.items, action.payload);\n      console.log(state.items);\n      console.log(\"EE\");\n      state.inCart = state.inCart + 1; //action.payload.qty;\n      state.totalPrice = 0;\n      state.items.map(function (item) {\n        state.totalPrice += Number.parseFloat(item.total.toFixed(2));\n      });\n    },\n    removeItem: function removeItem(state, action) {\n      state.items = (0,_cart_util__WEBPACK_IMPORTED_MODULE_0__.removeItemFromCart)(state.items, action.payload);\n      //state.totalPrice = state.totalPrice - (action.payload.price * action.payload.quantity);\n      state.inCart = state.inCart - 1;\n      state.totalPrice = 0;\n      state.items.map(function (item) {\n        state.totalPrice += Number.parseFloat(item.total.toFixed(2));\n      });\n    },\n    increaseQty: function increaseQty(state, action) {\n      state.totalPrice = 0;\n      state.inCart = state.inCart + 1;\n      //let tmp = []\n      //let tot = 0\n      state.items.map(function (item) {\n        if (item.id === action.payload.id) {\n          item.qty = item.qty + 1;\n          item.total = item.total + action.payload.price;\n          item.total = Number.parseFloat(item.total.toFixed(2));\n          /*\n          item.total = item.total + action.payload.price\n          const re = /^[1-9]\\d{0,5}\\.[0-9][0-9]$/;\n          if(!re.test(String(item.total))){\n            console.log(\"faction incorrect\" + item.total)\n            item.total =Number.parseFloat(item.total.toFixed(2));\n            console.log('formated:' + item.total.toFixed(2))\n          }\n          */\n          //tmp.push(item)\n        }\n        //else{\n\n        //  tmp.push(item)\n        //}\n        state.totalPrice = state.totalPrice + item.total;\n      });\n      //state.items = tmp;\n      //state.totalPrice = 0\n      //state.items.map((itm) =>{\n      //  state.totalPrice = state.totalPrice + itm.total;\n      //})\n      //console.log(\"TT\" + state.totalPrice)\n      //state.totalPrice = \n    },\n    decreaseQty: function decreaseQty(state, action) {\n      state.totalPrice = 0;\n      state.inCart = state.inCart - 1;\n      state.items.map(function (item) {\n        if (item.id === action.payload.id) {\n          item.qty = item.qty - 1;\n          item.total = item.total - action.payload.price;\n          console.log(\"total\" + item.total);\n        }\n        state.totalPrice = item.total - state.totalPrice;\n      });\n    },\n    clearCart: function clearCart(state) {\n      return initialState;\n    }\n  }\n});\n\n//store selectors:\nvar selectAllItems = function selectAllItems(state) {\n  return state.cart.items;\n};\nvar getAmountInCart = function getAmountInCart(state) {\n  return state.cart.inCart;\n};\nvar getTotalPrice = function getTotalPrice(state) {\n  return state.cart.totalPrice;\n};\n\n// Memoized selector using createSelector from Redux Toolkit\n// It only recalculates when entities change\nvar selectItemById = (0,reselect__WEBPACK_IMPORTED_MODULE_2__.createSelector)([selectAllItems, function (state, id) {\n  return id;\n}], function (items, id) {\n  return items.map(function (item) {\n    return item.id === id;\n  });\n});\nvar _cartSlice$actions = cartSlice.actions,\n  addItem = _cartSlice$actions.addItem,\n  removeItem = _cartSlice$actions.removeItem,\n  increaseQty = _cartSlice$actions.increaseQty,\n  decreaseQty = _cartSlice$actions.decreaseQty,\n  clearCart = _cartSlice$actions.clearCart;\n\nvar getCurrentCart = function getCurrentCart(state) {\n  return state.shopping_cart.cartItems;\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (cartSlice.reducer);\n\n//# sourceURL=webpack://xtra-app/./src/app/store/cart/cartReducer.tsx?");

/***/ })

});